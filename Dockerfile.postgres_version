FROM python:3.12-slim

WORKDIR /app

# Install PostgreSQL, build dependencies, and tools for pgvector
RUN apt-get update && apt-get install -y \
    postgresql-15 \
    postgresql-contrib-15 \
    postgresql-server-dev-15 \
    build-essential \
    git \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install pgvector from source
RUN cd /tmp && \
    git clone --branch v0.8.0 https://github.com/pgvector/pgvector.git && \
    cd pgvector && \
    make && \
    make install

# Install Python dependencies
COPY requirements.pgvector.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY src/ src/
COPY sql/ sql/
COPY docs/ docs/
COPY README.md .
COPY .env.example .env.example

# Set up PostgreSQL data directory and permissions
RUN mkdir -p /var/lib/postgresql/data && \
    chown -R postgres:postgres /var/lib/postgresql && \
    mkdir -p /run/postgresql && \
    chown -R postgres:postgres /run/postgresql

# Set environment variables for self-contained PostgreSQL
ENV PYTHONUNBUFFERED=1
ENV OLLAMA_API_URL=http://host.docker.internal:11434
ENV OLLAMA_EMBEDDING_MODEL=nomic-embed-text
ENV POSTGRES_HOST=localhost
ENV POSTGRES_PORT=5432
ENV POSTGRES_DB=postgres
ENV POSTGRES_USER=postgres
ENV POSTGRES_PASSWORD=postgres
ENV DEFAULT_MEMORY_DOMAIN=default
ENV PGDATA=/var/lib/postgresql/data

# Create startup script
COPY docker-entrypoint-postgres.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-postgres.sh

# Create volume for persistence
VOLUME ["/var/lib/postgresql/data"]

# Run the startup script that initializes PostgreSQL and starts the MCP server
CMD ["/usr/local/bin/docker-entrypoint-postgres.sh"]